/*
* generated by Xtext
*/
grammar InternalQuestionsDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package questions.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package questions.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import questions.services.QuestionsDSLGrammarAccess;

}

@parser::members {
 
 	private QuestionsDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(QuestionsDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleQuestionSet
entryRuleQuestionSet 
:
{ before(grammarAccess.getQuestionSetRule()); }
	 ruleQuestionSet
{ after(grammarAccess.getQuestionSetRule()); } 
	 EOF 
;

// Rule QuestionSet
ruleQuestionSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionSetAccess().getGroup()); }
(rule__QuestionSet__Group__0)
{ after(grammarAccess.getQuestionSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getAlternatives()); }
(rule__Question__Alternatives)
{ after(grammarAccess.getQuestionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleChoice
entryRuleSingleChoice 
:
{ before(grammarAccess.getSingleChoiceRule()); }
	 ruleSingleChoice
{ after(grammarAccess.getSingleChoiceRule()); } 
	 EOF 
;

// Rule SingleChoice
ruleSingleChoice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleChoiceAccess().getGroup()); }
(rule__SingleChoice__Group__0)
{ after(grammarAccess.getSingleChoiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultipleChoice
entryRuleMultipleChoice 
:
{ before(grammarAccess.getMultipleChoiceRule()); }
	 ruleMultipleChoice
{ after(grammarAccess.getMultipleChoiceRule()); } 
	 EOF 
;

// Rule MultipleChoice
ruleMultipleChoice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultipleChoiceAccess().getGroup()); }
(rule__MultipleChoice__Group__0)
{ after(grammarAccess.getMultipleChoiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValueQuestion
entryRuleIntValueQuestion 
:
{ before(grammarAccess.getIntValueQuestionRule()); }
	 ruleIntValueQuestion
{ after(grammarAccess.getIntValueQuestionRule()); } 
	 EOF 
;

// Rule IntValueQuestion
ruleIntValueQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueQuestionAccess().getGroup()); }
(rule__IntValueQuestion__Group__0)
{ after(grammarAccess.getIntValueQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnswer
entryRuleAnswer 
:
{ before(grammarAccess.getAnswerRule()); }
	 ruleAnswer
{ after(grammarAccess.getAnswerRule()); } 
	 EOF 
;

// Rule Answer
ruleAnswer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnswerAccess().getGroup()); }
(rule__Answer__Group__0)
{ after(grammarAccess.getAnswerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Question__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getSingleChoiceParserRuleCall_0()); }
	ruleSingleChoice
{ after(grammarAccess.getQuestionAccess().getSingleChoiceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getQuestionAccess().getMultipleChoiceParserRuleCall_1()); }
	ruleMultipleChoice
{ after(grammarAccess.getQuestionAccess().getMultipleChoiceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getQuestionAccess().getIntValueQuestionParserRuleCall_2()); }
	ruleIntValueQuestion
{ after(grammarAccess.getQuestionAccess().getIntValueQuestionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__QuestionSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuestionSet__Group__0__Impl
	rule__QuestionSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionSetAccess().getQuestionsKeyword_0()); }

	'questions' 

{ after(grammarAccess.getQuestionSetAccess().getQuestionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuestionSet__Group__1__Impl
	rule__QuestionSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionSetAccess().getNameAssignment_1()); }
(rule__QuestionSet__NameAssignment_1)
{ after(grammarAccess.getQuestionSetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuestionSet__Group__2__Impl
	rule__QuestionSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionSetAccess().getQuestionsAssignment_2()); }
(rule__QuestionSet__QuestionsAssignment_2)
{ after(grammarAccess.getQuestionSetAccess().getQuestionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuestionSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionSetAccess().getQuestionsAssignment_3()); }
(rule__QuestionSet__QuestionsAssignment_3)*
{ after(grammarAccess.getQuestionSetAccess().getQuestionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SingleChoice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleChoice__Group__0__Impl
	rule__SingleChoice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getSingleKeyword_0()); }

	'single' 

{ after(grammarAccess.getSingleChoiceAccess().getSingleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleChoice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleChoice__Group__1__Impl
	rule__SingleChoice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getNameAssignment_1()); }
(rule__SingleChoice__NameAssignment_1)
{ after(grammarAccess.getSingleChoiceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleChoice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleChoice__Group__2__Impl
	rule__SingleChoice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getTextAssignment_2()); }
(rule__SingleChoice__TextAssignment_2)
{ after(grammarAccess.getSingleChoiceAccess().getTextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleChoice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleChoice__Group__3__Impl
	rule__SingleChoice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getSingleChoiceAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleChoice__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleChoice__Group__4__Impl
	rule__SingleChoice__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getAnswersAssignment_4()); }
(rule__SingleChoice__AnswersAssignment_4)
{ after(grammarAccess.getSingleChoiceAccess().getAnswersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleChoice__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleChoice__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getAnswersAssignment_5()); }
(rule__SingleChoice__AnswersAssignment_5)*
{ after(grammarAccess.getSingleChoiceAccess().getAnswersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MultipleChoice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleChoice__Group__0__Impl
	rule__MultipleChoice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getMultipleKeyword_0()); }

	'multiple' 

{ after(grammarAccess.getMultipleChoiceAccess().getMultipleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleChoice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleChoice__Group__1__Impl
	rule__MultipleChoice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getNameAssignment_1()); }
(rule__MultipleChoice__NameAssignment_1)
{ after(grammarAccess.getMultipleChoiceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleChoice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleChoice__Group__2__Impl
	rule__MultipleChoice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getTextAssignment_2()); }
(rule__MultipleChoice__TextAssignment_2)
{ after(grammarAccess.getMultipleChoiceAccess().getTextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleChoice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleChoice__Group__3__Impl
	rule__MultipleChoice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getMultipleChoiceAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleChoice__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleChoice__Group__4__Impl
	rule__MultipleChoice__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getAnswersAssignment_4()); }
(rule__MultipleChoice__AnswersAssignment_4)
{ after(grammarAccess.getMultipleChoiceAccess().getAnswersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleChoice__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleChoice__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getAnswersAssignment_5()); }
(rule__MultipleChoice__AnswersAssignment_5)*
{ after(grammarAccess.getMultipleChoiceAccess().getAnswersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntValueQuestion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntValueQuestion__Group__0__Impl
	rule__IntValueQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getIntegerKeyword_0()); }

	'integer' 

{ after(grammarAccess.getIntValueQuestionAccess().getIntegerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntValueQuestion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntValueQuestion__Group__1__Impl
	rule__IntValueQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getNameAssignment_1()); }
(rule__IntValueQuestion__NameAssignment_1)
{ after(grammarAccess.getIntValueQuestionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntValueQuestion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntValueQuestion__Group__2__Impl
	rule__IntValueQuestion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getTextAssignment_2()); }
(rule__IntValueQuestion__TextAssignment_2)
{ after(grammarAccess.getIntValueQuestionAccess().getTextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntValueQuestion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntValueQuestion__Group__3__Impl
	rule__IntValueQuestion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getExpectingKeyword_3()); }

	'expecting' 

{ after(grammarAccess.getIntValueQuestionAccess().getExpectingKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntValueQuestion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntValueQuestion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getExpectedValueAssignment_4()); }
(rule__IntValueQuestion__ExpectedValueAssignment_4)
{ after(grammarAccess.getIntValueQuestionAccess().getExpectedValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Answer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__0__Impl
	rule__Answer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAnswerAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__1__Impl
	rule__Answer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIsCorrectAssignment_1()); }
(rule__Answer__IsCorrectAssignment_1)?
{ after(grammarAccess.getAnswerAccess().getIsCorrectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__2__Impl
	rule__Answer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getAnswerAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getTextAssignment_3()); }
(rule__Answer__TextAssignment_3)
{ after(grammarAccess.getAnswerAccess().getTextAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__QuestionSet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionSetAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getQuestionSetAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionSet__QuestionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionSetAccess().getQuestionsQuestionParserRuleCall_2_0()); }
	ruleQuestion{ after(grammarAccess.getQuestionSetAccess().getQuestionsQuestionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionSet__QuestionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionSetAccess().getQuestionsQuestionParserRuleCall_3_0()); }
	ruleQuestion{ after(grammarAccess.getQuestionSetAccess().getQuestionsQuestionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSingleChoiceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__TextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getTextEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getSingleChoiceAccess().getTextEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__AnswersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getAnswersAnswerParserRuleCall_4_0()); }
	ruleAnswer{ after(grammarAccess.getSingleChoiceAccess().getAnswersAnswerParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleChoice__AnswersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleChoiceAccess().getAnswersAnswerParserRuleCall_5_0()); }
	ruleAnswer{ after(grammarAccess.getSingleChoiceAccess().getAnswersAnswerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMultipleChoiceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__TextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getTextEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getMultipleChoiceAccess().getTextEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__AnswersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getAnswersAnswerParserRuleCall_4_0()); }
	ruleAnswer{ after(grammarAccess.getMultipleChoiceAccess().getAnswersAnswerParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoice__AnswersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleChoiceAccess().getAnswersAnswerParserRuleCall_5_0()); }
	ruleAnswer{ after(grammarAccess.getMultipleChoiceAccess().getAnswersAnswerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIntValueQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__TextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getTextEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getIntValueQuestionAccess().getTextEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValueQuestion__ExpectedValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueQuestionAccess().getExpectedValueEIntParserRuleCall_4_0()); }
	ruleEInt{ after(grammarAccess.getIntValueQuestionAccess().getExpectedValueEIntParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__IsCorrectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIsCorrectXKeyword_1_0()); }
(
{ before(grammarAccess.getAnswerAccess().getIsCorrectXKeyword_1_0()); }

	'X' 

{ after(grammarAccess.getAnswerAccess().getIsCorrectXKeyword_1_0()); }
)

{ after(grammarAccess.getAnswerAccess().getIsCorrectXKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__TextAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getTextEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getAnswerAccess().getTextEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


