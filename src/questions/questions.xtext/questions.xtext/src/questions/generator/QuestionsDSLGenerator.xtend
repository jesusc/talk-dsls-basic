/*
 * generated by Xtext
 */
package questions.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import questions.QuestionSet
import questions.MultipleChoice
import questions.SingleChoice
import questions.IntValueQuestion
import questions.Question

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class QuestionsDSLGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))


		val root = resource.allContents.filter(typeof(QuestionSet)).findFirst[true]
		fsa.generateFile(root.name + '.html', root.compile)
	}
	
	def String compile(QuestionSet set) '''
	<html>
		<head>
			<title>Questions!</title>
			<style>
				.question {
					margin-bottom: 10px;
				}
			</style>
			<script type="text/javascript">
				function validateForm() {
				    var form = document.forms["qform"];
					«FOR q : set.questions»
					«q.genCheckQuestion»
					«ENDFOR»
				}			
			</script>
		</head>
		<body>		
		 <form name='qform'>	
			«FOR q : set.questions»
				<div class='question'>
					«q.compileQ»
					<div id='answer«q.name»'></div>
				</div>
			«ENDFOR»
	  		<input type="button" name="submit" value="Submit" onsubmit='return false;' onclick='validateForm();'> 
	  		</form> 
		</body>
	</html>
	'''

	def dispatch String genCheckQuestion(SingleChoice q) '''
		if ( ! document.getElementById('«q.name»«q.answers.indexOf(q.answers.filter[isIsCorrect].findFirst[true])»').checked ) {
				// alert("Incorrect answer for question «q.name»" );
			document.getElementById('answer«q.name»').innerHTML='Incorrect! :-(';
		} else {
			document.getElementById('answer«q.name»').innerHTML='Correct!';			
		}
	'''
	
	def dispatch String genCheckQuestion(MultipleChoice q) '''
		// TODO
	'''
	/* 		var v = form["«q.name»"].value;
		if ( v != "«q.name»«q.answers.indexOf(q.answers.filter[isIsCorrect].findFirst[true])»" ) {
			alert("Incorrect answer for question «q.name»" );
		} */
				    
	def dispatch String genCheckQuestion(IntValueQuestion q) '''
		// TODO
	'''
			
	
	def dispatch String compileQ(SingleChoice q) '''
		<div>«q.text»</div>
		<div>
		«FOR a : q.answers»
		  <input type="radio" name="«q.name»" id="«q.name»«q.answers.indexOf(a)»" value="«q.name»«q.answers.indexOf(a)»"> 
		  	«a.text»<br>
		«ENDFOR»
		</div>
	'''

	def dispatch String compileQ(MultipleChoice q) '''
		<div>«q.text»</div>
		<div>
		«FOR a : q.answers»
		  <input type="checkbox" name="«q.name»«q.answers.indexOf(a)»" id="«q.name»«q.answers.indexOf(a)»" value="«q.name»«q.answers.indexOf(a)»"> 
		  	«a.text»<br>
		«ENDFOR»
		</div>	'''

	def dispatch String compileQ(IntValueQuestion q) '''
		<div>«q.text»</div>
		<div>
			<input type="text" name="«q.name»" value=""><br>
		</div>
	'''
}
